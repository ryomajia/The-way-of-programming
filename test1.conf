input {
file {
    path => [ "/etc/httpd/logs/test_log.log" ]
    start_position => "beginning"
}
}


filter {
    ruby {
        init => "@kname = ['http_x_forwarded_for','time_local','request','status','body_bytes_sent','request_body','content_length','http_referer','http_user_agent','nuid','http_cookie','remote_addr','hostname','upstream_addr','upstream_response_time','request_time']"
        code => "event.append(Hash[@kname.zip(event['message'].split(' | '))])"
    }
    if [request] {
        ruby {
            init => "@kname = ['method','uri','verb']"
            code => "event.append(Hash[@kname.zip(event['request'].split(' '))])"
        }
        if [uri] == "/"{
            ruby {
                init => "@kname = ['url_path','url_args']"
                code => "event.append(Hash[@kname.zip(event['http_referer'].split('?'))])"
            }
            kv {
                prefix => "url_"
                source => "url_args"
                field_split => "& "
                remove_field => [ "url_args","uri","request" ]
            }
        }
    }
    if [http_user_agent] {
        ruby {
            init => "@kname = ['agent_user_type','agent_args1','agent_args2']"
            code => "event.append(Hash[@kname.zip(event['http_user_agent'].split(' '))])"
        }
        if [agent_user_type] == "Mozilla/5.0" {
            ruby {
                init => "@kname = ['agent_args3','agent_type_args','agent_args']"
                code => "event.append(Hash[@kname.zip(event['http_user_agent'].split('('))])"
            }
        }
            if [agent_type_args] {
                ruby {
                    init => "@kname = ['agent_type_args2','test']"
                    code => "event.append(Hash[@kname.zip(event['agent_type_args'].split(')))])"
                }
            }
            if [agent_type_args2] {
                ruby {
                    init => "@kname = ['agent_type2']"
                    code => "event.append(Hash[@kname.zip(event['agent_type_args2'].split(';'))])"
                }
            }
                if [agent_type2] {
                    ruby {
                        init => "@kname = ['agent_type']"
                        code => "event.append(Hash[@kname.zip(event['agent_type2'].split(' '))])"
                    }
                } 
    }
    mutate {
        convert => [
            "body_bytes_sent" , "integer",
            "content_length", "integer",
            "upstream_response_time", "float",
            "request_time", "float"
        ]
    }
    date {
        match => [ "time_local", "dd/MMM/yyyy:hh:mm:ss Z" ]
        locale => "en"
    }
}


output {
#    file {
#        path => "/usr/local/src/test1.log"
    redis {

        host => "172.16.125.129" data_type => "list" key => "logstash:nginx3"
}
#}
}
